---
- name: Check version of installed ansible.windows collection
  ansible.builtin.debug:
    msg: "ansible.windows version {{ lookup('community.general.collection_version', 'ansible.windows') }}"

- name: Create temp folder on target
  ansible.windows.win_file:
    path: "{{ kpr_install_files_path }}"
    state: directory

- name: Copy HTTP install file
  ansible.windows.win_get_url:
    url: "{{ kpr_install_source_dir }}/{{ kpr_install_source_file }}"
    dest: "{{ kpr_install_files_path }}\\{{ kpr_install_source_file }}"
    force: false
  when: kpr_install_source_dir is ansible.builtin.uri(schemes=['http', 'https'])

- name: Copy install file from Ansible server
  ansible.windows.win_copy:
    src: "{{ playbook_dir }}/{{ kpr_install_source_dir }}/{{ kpr_install_source_file }}"
    dest: "{{ kpr_install_files_path }}\\{{ kpr_install_source_file }}"
    force: false
  when: kpr_install_source_dir is not ansible.builtin.uri(schemes=['http', 'https'])

- name: "Add user to local Administrators group ({{ user }})"
  ansible.windows.win_group_membership:
    name: 'Administrators'
    members: "{{ user }}"
    state: present
  vars:
    user: "{{ lookup('ansible.builtin.env', 'KPR_GMSA_USER', default=lookup('ansible.builtin.env', 'EPIC_DOMAIN_USER', default=epic_domain_user)) }}"

- name: Install IIS features
  ansible.windows.win_feature:
    name:
      - Web-Server
      - Web-Mgmt-Console
      - Web-Scripting-Tools
      - Web-Asp-Net
      - Web-Asp-Net45
      - RSAT-AD-PowerShell
    state: present

- name: Install Application from msi with multiple properties for installer
  ansible.windows.win_package:
    path: "{{ kpr_install_files_path }}\\{{ kpr_install_source_file }}"
    # product_id: "{{ kpr_product_id }}"
    provider: msi
    state: present
    arguments: >-
      {{ kpr_msi_args }}
      APPPOOLNAME="{{ lookup('ansible.builtin.env', 'EPIC_DOMAIN_USER', default=epic_domain_user) }}"
      APPPOOLPASS="{{ lookup('ansible.builtin.env', 'EPIC_DOMAIN_PASSWORD', default=epic_domain_password) }}"
      {% if kpr_aes_password %}
      AES_PASSWORD="{{ kpr_aes_password }}"
      AES_PASSWORD_CONFIRM="{{ kpr_aes_password }}"
      ENCRYPT_TYPE=AES
      {% endif %}
    log_path: "{{ kpr_install_files_path }}\\kuiper_install.log"
    wait_for_children: true
  no_log: true # otherwise, this will output the password
  become: true
  become_method: ansible.builtin.runas
  become_flags: logon_type=interactive logon_flags=with_profile
  vars:
    ansible_become_user: "{{ lookup('ansible.builtin.env', 'EPIC_DOMAIN_USER', default=epic_domain_user) }}"
    ansible_become_password: "{{ lookup('ansible.builtin.env', 'EPIC_DOMAIN_PASSWORD', default=epic_domain_password) }}"
    kpr_aes_password: "{{ lookup('ansible.builtin.env', 'AES_PASSWORD', default=aes_password) | default(false) }}"
  register: kuiper_install
  failed_when: kuiper_install.rc not in [0, 3010]

# - name: Install Application from msi with DSC
#   ansible.windows.win_dsc:
#     resource_name: Package
#     Name: "Kuiper Install"
#     Path: "{{ kpr_install_files_path }}\\{{ kpr_install_source_file }}"
#     ProductId: "{{ kpr_product_id }}"
#     Arguments: "{{ kpr_msi_args }}"
#   become: true
#   become_method: ansible.builtin.runas
#   become_flags: logon_type=interactive logon_flags=with_profile
#   vars:
#     ansible_become_user: "{{ epic_domain_user }}"
#     ansible_become_password: "{{ lookup('ansible.builtin.env', 'EPIC_DOMAIN_PASSWORD', default=epic_domain_password) }}"
#   register: kuiper_install

# - name: Run executable in 'C:\Program Files' with a custom chdir
#   ansible.windows.win_command:
#     # When using cmd, the arguments need to be quoted manually
#     cmd: "{{ kpr_install_files_path }}\\{{ kpr_install_source_file }} /qn /norestart {{ kpr_msi_args }}"
#   become: true
#   become_method: ansible.builtin.runas
#   become_flags: logon_type=interactive logon_flags=with_profile
#   vars:
#     ansible_become_user: "{{ epic_domain_user }}"
#     ansible_become_password: "{{ lookup('ansible.builtin.env', 'EPIC_DOMAIN_PASSWORD', default=epic_domain_password) }}"
#   register: kuiper_install

# - name: Debug
#   ansible.builtin.debug:
#     msg: "{{ kuiper_install }}"
